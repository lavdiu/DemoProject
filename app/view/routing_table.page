<?php

use Lavdiu\DemoApp\RoutingTable;
use Laf\UI\Component\Dropdown;
use Laf\UI\Component\Link;
use Laf\UI\Container\ContainerType;
use Laf\UI\Form\DrawMode;
use Laf\UI\Form\Form;
use Laf\UI\Page\AdminPage;
use Laf\Util\UrlParser;
use Laf\UI\Container\HtmlContainer;
use Laf\UI\Grid\PhpGrid\PhpGrid;
use Laf\UI\Grid\PhpGrid\Column;
use Laf\UI\Grid\PhpGrid\ActionButton;
use Lavdiu\DemoApp\Factory;
use Laf\UI\Container\Div;
use Laf\UI\Container\TabContainer;
use Laf\UI\Container\TabItem;

$id = UrlParser::getId();
$routingtable = new RoutingTable($id);
$form = $routingtable->getForm();

/**
$form->setComponents([])
->addComponent($routingtable->getIdFormElement())
->addComponent($routingtable->getParentIdFormElement())
->addComponent($routingtable->getUniqueNameFormElement())
->addComponent($routingtable->getLabelFormElement())
->addComponent($routingtable->getIconFormElement())
->addComponent($routingtable->getPageFileFormElement())
->addComponent($routingtable->getIsDefaultFormElement())
->addComponent($routingtable->getIsVisibleFormElement())
->addComponent($routingtable->getOrdinalFormElement())
->addComponent($routingtable->getIsStandaloneFormElement())
->addComponent($routingtable->getRequiresLoginFormElement())
->addComponent($routingtable->getActionsFormElement())
->addComponent($routingtable->getViewableForAllFormElement())
->addComponent($routingtable->getCreatedByFormElement())
->addComponent($routingtable->getCreatedOnFormElement())
->addComponent($routingtable->getUpdatedByFormElement())
->addComponent($routingtable->getUpdatedOnFormElement());
 */
$html = Factory::GeneralPage();
$page = new AdminPage();

$page->setTitle("<a href='" . UrlParser::getListLink() . "' class='text-black text-decoration-none'>RoutingTable</a>");
$page->setTitleIcon('far fa-list-alt');


if ($form->isSubmitted()) {
    $id = $form->processForm();
    UrlParser::redirectToViewPage($id);
    exit;
}

switch (UrlParser::getAction()) {
    case 'update':
        $page->setContainerType(ContainerType::TYPE_DEFAULT);
        $form->setDrawMode(DrawMode::UPDATE);

        /**
        $form->setComponents([])
        ->addComponent($routingtable->getIdFormElement())
        ->addComponent($routingtable->getParentIdFormElement())
        ->addComponent($routingtable->getUniqueNameFormElement())
        ->addComponent($routingtable->getLabelFormElement())
        ->addComponent($routingtable->getIconFormElement())
        ->addComponent($routingtable->getPageFileFormElement())
        ->addComponent($routingtable->getIsDefaultFormElement())
        ->addComponent($routingtable->getIsVisibleFormElement())
        ->addComponent($routingtable->getOrdinalFormElement())
        ->addComponent($routingtable->getIsStandaloneFormElement())
        ->addComponent($routingtable->getRequiresLoginFormElement())
        ->addComponent($routingtable->getActionsFormElement())
        ->addComponent($routingtable->getViewableForAllFormElement());
         */
        $page->addComponent($form);

        $page->addLink(new Link('Cancel', UrlParser::getViewLink(), 'fas fa-window-close', [], ['btn', 'btn-sm', 'btn-outline-success']));
        $html->addComponent($page);
        echo $html->draw();
        break;
    case 'new':
        $page->setContainerType(ContainerType::TYPE_DEFAULT);

        /**
        $form->setComponents([])
        ->addComponent($routingtable->getIdFormElement())
        ->addComponent($routingtable->getParentIdFormElement())
        ->addComponent($routingtable->getUniqueNameFormElement())
        ->addComponent($routingtable->getLabelFormElement())
        ->addComponent($routingtable->getIconFormElement())
        ->addComponent($routingtable->getPageFileFormElement())
        ->addComponent($routingtable->getIsDefaultFormElement())
        ->addComponent($routingtable->getIsVisibleFormElement())
        ->addComponent($routingtable->getOrdinalFormElement())
        ->addComponent($routingtable->getIsStandaloneFormElement())
        ->addComponent($routingtable->getRequiresLoginFormElement())
        ->addComponent($routingtable->getActionsFormElement())
        ->addComponent($routingtable->getViewableForAllFormElement());
         */
        $form->setDrawMode(DrawMode::INSERT);
        $page->addComponent($form);
        $page->addLink(new Link('Cancel', UrlParser::getListLink(), 'fas fa-window-close', [], ['btn', 'btn-sm', 'btn-outline-success']));
        $html->addComponent($page);
        echo $html->draw();
        break;
    case 'delete':
        if ($routingtable->recordExists()) {
            if ($routingtable->canSoftDelete()) {
                $routingtable->softDelete();
            } else {
                $routingtable->hardDelete();
            }
        }
        UrlParser::redirectToListPage();
        break;
    case 'view':
        $page->setContainerType(ContainerType::TYPE_DEFAULT);
        $form->setDrawMode(DrawMode::VIEW);
        $page->addComponent($form);
        $page->addLink(new Link('List', UrlParser::getListLink(), 'far fa-list-alt', [], ['btn', 'btn-sm', 'btn-outline-success']));

        $dd = new Dropdown('Options', '', 'fa fa-cogs', true);
        $dd->addCssClass('btn-outline-success')
            ->addCssClass('btn-sm');
        $newLink = new Link('Update', UrlParser::getUpdateLink(), 'fa fa-edit', ['class' => 'btn btn-sm btn-outline-warning']);
        $deleteLink = new Link('Delete', UrlParser::getDeleteLink(), 'fa fa-trash', ['class' => 'btn btn-sm btn-outline-danger']);
        $deleteLink->setConfirmationMessage('Are you sure you want to delete this?');

        $dd->addLink($newLink)
            ->addLink($deleteLink);
        $page->addLink($dd);
        $html->addComponent($page);

        $tabContainer = new TabContainer();
        $panel = new Div();
        $panel->setContainerType(ContainerType::TYPE_FLUID);



        $routing_table = new PhpGrid('routing_table_list');
        $routing_table->setTitle('routing_table List')
            ->setRowsPerPage(20)
            ->setSqlQuery('
SELECT * FROM (
	SELECT
		  `routing_table`.`id` AS routing_table_id
		, `routing_table`.`parent_id` AS routing_table_parent_id
		, `routing_table_parent_id`.`label` AS routing_table_parent_id_label
		, `routing_table`.`unique_name` AS routing_table_unique_name
		, `routing_table`.`label` AS routing_table_label
		, `routing_table`.`icon` AS routing_table_icon
		, `routing_table`.`page_file` AS routing_table_page_file
		, `routing_table`.`is_default` AS routing_table_is_default
		, `yes_or_no`.`label` AS yes_or_no_label
		, `routing_table`.`is_visible` AS routing_table_is_visible
		, `yes_or_no_is_visible`.`label` AS yes_or_no_is_visible_label
		, `routing_table`.`ordinal` AS routing_table_ordinal
		, `routing_table`.`is_standalone` AS routing_table_is_standalone
		, `yes_or_no_is_standalone`.`label` AS yes_or_no_is_standalone_label
		, `routing_table`.`requires_login` AS routing_table_requires_login
		, `yes_or_no_requires_login`.`label` AS yes_or_no_requires_login_label
		, `routing_table`.`actions` AS routing_table_actions
		, `routing_table`.`viewable_for_all` AS routing_table_viewable_for_all
		, `yes_or_no_viewable_for_all`.`label` AS yes_or_no_viewable_for_all_label
		, `routing_table`.`created_by` AS routing_table_created_by
		, `person`.`name` AS person_name
		, `routing_table`.`created_on` AS routing_table_created_on
		, `routing_table`.`updated_by` AS routing_table_updated_by
		, `person_updated_by`.`name` AS person_updated_by_name
		, `routing_table`.`updated_on` AS routing_table_updated_on
	FROM routing_table routing_table
	LEFT JOIN `routing_table` `routing_table_parent_id` ON `routing_table`.`parent_id` = `routing_table_parent_id`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no` ON `routing_table`.`is_default` = `yes_or_no`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_is_visible` ON `routing_table`.`is_visible` = `yes_or_no_is_visible`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_is_standalone` ON `routing_table`.`is_standalone` = `yes_or_no_is_standalone`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_requires_login` ON `routing_table`.`requires_login` = `yes_or_no_requires_login`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_viewable_for_all` ON `routing_table`.`viewable_for_all` = `yes_or_no_viewable_for_all`.`id`
	LEFT JOIN `person` `person` ON `routing_table`.`created_by` = `person`.`id`
	LEFT JOIN `person` `person_updated_by` ON `routing_table`.`updated_by` = `person_updated_by`.`id`
	WHERE 1=1  AND routing_table.id = ' . ((int)UrlParser::getId()).'

)l1 ');

        $routing_table->addColumn(((new Column('routing_table_id', 'Id', true, true, sprintf('?module=%s&action=view&id={routing_table_id}', UrlParser::getModule())))->setInnerElementCssClass('btn btn-sm btn-outline-success'))->setOuterElementCssStyle('width:100px;'));
        $routing_table->addColumn(new Column('routing_table_parent_id', 'ParentId', false));
        $routing_table->addColumn(new Column('routing_table_parent_id_label', 'Parent', true));
        $routing_table->addColumn(new Column('routing_table_unique_name', 'Unique Name', true));
        $routing_table->addColumn(new Column('routing_table_label', 'Label', true));
        $routing_table->addColumn(new Column('routing_table_icon', 'Icon', true));
        $routing_table->addColumn(new Column('routing_table_page_file', 'Page File', true));
        $routing_table->addColumn(new Column('routing_table_is_default', 'Is DefaultId', false));
        $routing_table->addColumn(new Column('yes_or_no_label', 'Is Default', true));
        $routing_table->addColumn(new Column('routing_table_is_visible', 'Is VisibleId', false));
        $routing_table->addColumn(new Column('yes_or_no_is_visible_label', 'Is Visible', true));
        $routing_table->addColumn(new Column('routing_table_ordinal', 'Ordinal', true));
        $routing_table->addColumn(new Column('routing_table_is_standalone', 'Is StandaloneId', false));
        $routing_table->addColumn(new Column('yes_or_no_is_standalone_label', 'Is Standalone', true));
        $routing_table->addColumn(new Column('routing_table_requires_login', 'Requires LoginId', false));
        $routing_table->addColumn(new Column('yes_or_no_requires_login_label', 'Requires Login', true));
        $routing_table->addColumn(new Column('routing_table_actions', 'Actions', true));
        $routing_table->addColumn(new Column('routing_table_viewable_for_all', 'Viewable For AllId', false));
        $routing_table->addColumn(new Column('yes_or_no_viewable_for_all_label', 'Viewable For All', true));
        $routing_table->addColumn(new Column('routing_table_created_by', 'Created ById', false));
        $routing_table->addColumn(new Column('person_name', 'Created By', true));
        $routing_table->addColumn(new Column('routing_table_created_on', 'Created On', true));
        $routing_table->addColumn(new Column('routing_table_updated_by', 'Updated ById', false));
        $routing_table->addColumn(new Column('person_updated_by_name', 'Updated By', true));
        $routing_table->addColumn(new Column('routing_table_updated_on', 'Updated On', true));

        $routing_table->addActionButton(new ActionButton('View', sprintf('?module=%s&action=view&id={routing_table_id}', UrlParser::getModule()), 'fa fa-eye'));
        $routing_table->addActionButton(new ActionButton('Update', sprintf('?module=%s&action=update&id={routing_table_id}', UrlParser::getModule()), 'fa fa-edit'));
        $deleteLink = new ActionButton('Delete', sprintf('?module=%s&action=delete&id={routing_table_id}', UrlParser::getModule()), 'fa fa-trash');
        $deleteLink->addAttribute('onclick', "return confirm('Are you sure you want to delete this?')");
        $routing_table->addActionButton($deleteLink);

        if ($routing_table->isReadyToHandleRequests()) {
            $routing_table->bootstrap();
        }


        echo $html->draw();
        break;
    case 'list':
    default:
        $grid = new PhpGrid('routing_table_list');
        $grid->setTitle('routing_table List')
            ->setRowsPerPage(20)
            ->setSqlQuery('
SELECT * FROM (
	SELECT
		  `routing_table`.`id` AS routing_table_id
		, `routing_table`.`parent_id` AS routing_table_parent_id
		, `routing_table_parent_id`.`label` AS routing_table_parent_id_label
		, `routing_table`.`unique_name` AS routing_table_unique_name
		, `routing_table`.`label` AS routing_table_label
		, `routing_table`.`icon` AS routing_table_icon
		, `routing_table`.`page_file` AS routing_table_page_file
		, `routing_table`.`is_default` AS routing_table_is_default
		, `yes_or_no`.`label` AS yes_or_no_label
		, `routing_table`.`is_visible` AS routing_table_is_visible
		, `yes_or_no_is_visible`.`label` AS yes_or_no_is_visible_label
		, `routing_table`.`ordinal` AS routing_table_ordinal
		, `routing_table`.`is_standalone` AS routing_table_is_standalone
		, `yes_or_no_is_standalone`.`label` AS yes_or_no_is_standalone_label
		, `routing_table`.`requires_login` AS routing_table_requires_login
		, `yes_or_no_requires_login`.`label` AS yes_or_no_requires_login_label
		, `routing_table`.`actions` AS routing_table_actions
		, `routing_table`.`viewable_for_all` AS routing_table_viewable_for_all
		, `yes_or_no_viewable_for_all`.`label` AS yes_or_no_viewable_for_all_label
		, `routing_table`.`created_by` AS routing_table_created_by
		, `person`.`name` AS person_name
		, `routing_table`.`created_on` AS routing_table_created_on
		, `routing_table`.`updated_by` AS routing_table_updated_by
		, `person_updated_by`.`name` AS person_updated_by_name
		, `routing_table`.`updated_on` AS routing_table_updated_on
	FROM routing_table routing_table
	LEFT JOIN `routing_table` `routing_table_parent_id` ON `routing_table`.`parent_id` = `routing_table_parent_id`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no` ON `routing_table`.`is_default` = `yes_or_no`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_is_visible` ON `routing_table`.`is_visible` = `yes_or_no_is_visible`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_is_standalone` ON `routing_table`.`is_standalone` = `yes_or_no_is_standalone`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_requires_login` ON `routing_table`.`requires_login` = `yes_or_no_requires_login`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no_viewable_for_all` ON `routing_table`.`viewable_for_all` = `yes_or_no_viewable_for_all`.`id`
	LEFT JOIN `person` `person` ON `routing_table`.`created_by` = `person`.`id`
	LEFT JOIN `person` `person_updated_by` ON `routing_table`.`updated_by` = `person_updated_by`.`id`
	WHERE 1=1 
)l1 ');

        $grid->addColumn(((new Column('routing_table_id', 'Id', true, true, sprintf('?module=%s&action=view&id={routing_table_id}', UrlParser::getModule())))->setInnerElementCssClass('btn btn-sm btn-outline-success'))->setOuterElementCssStyle('width:100px;'));
        $grid->addColumn(new Column('routing_table_parent_id', 'ParentId', false));
        $grid->addColumn(new Column('routing_table_parent_id_label', 'Parent', true));
        $grid->addColumn(new Column('routing_table_unique_name', 'Unique Name', true));
        $grid->addColumn(new Column('routing_table_label', 'Label', true));
        $grid->addColumn(new Column('routing_table_icon', 'Icon', true));
        $grid->addColumn(new Column('routing_table_page_file', 'Page File', true));
        $grid->addColumn(new Column('routing_table_is_default', 'Is DefaultId', false));
        $grid->addColumn(new Column('yes_or_no_label', 'Is Default', true));
        $grid->addColumn(new Column('routing_table_is_visible', 'Is VisibleId', false));
        $grid->addColumn(new Column('yes_or_no_is_visible_label', 'Is Visible', true));
        $grid->addColumn(new Column('routing_table_ordinal', 'Ordinal', true));
        $grid->addColumn(new Column('routing_table_is_standalone', 'Is StandaloneId', false));
        $grid->addColumn(new Column('yes_or_no_is_standalone_label', 'Is Standalone', true));
        $grid->addColumn(new Column('routing_table_requires_login', 'Requires LoginId', false));
        $grid->addColumn(new Column('yes_or_no_requires_login_label', 'Requires Login', true));
        $grid->addColumn(new Column('routing_table_actions', 'Actions', true));
        $grid->addColumn(new Column('routing_table_viewable_for_all', 'Viewable For AllId', false));
        $grid->addColumn(new Column('yes_or_no_viewable_for_all_label', 'Viewable For All', true));
        $grid->addColumn(new Column('routing_table_created_by', 'Created ById', false));
        $grid->addColumn(new Column('person_name', 'Created By', true));
        $grid->addColumn(new Column('routing_table_created_on', 'Created On', true));
        $grid->addColumn(new Column('routing_table_updated_by', 'Updated ById', false));
        $grid->addColumn(new Column('person_updated_by_name', 'Updated By', true));
        $grid->addColumn(new Column('routing_table_updated_on', 'Updated On', true));

        $grid->addActionButton(new ActionButton('View', sprintf('?module=%s&action=view&id={routing_table_id}', UrlParser::getModule()), 'fa fa-eye'));
        $grid->addActionButton(new ActionButton('Update', sprintf('?module=%s&action=update&id={routing_table_id}', UrlParser::getModule()), 'fa fa-edit'));
        $deleteLink = new ActionButton('Delete', sprintf('?module=%s&action=delete&id={routing_table_id}', UrlParser::getModule()), 'fa fa-trash');
        $deleteLink->addAttribute('onclick', "return confirm('Are you sure you want to delete this?')");
        $grid->addActionButton($deleteLink);

        if ($grid->isReadyToHandleRequests()) {
            $grid->bootstrap();
        }

        $page->addComponent(new HtmlContainer($grid->draw()));
        $page->addLink(new Link('Add new', UrlParser::getNewLink(), 'fa fa-plus-square', [], ['class' => 'btn btn-sm btn-outline-success']));
        $page->setContainerType(ContainerType::TYPE_FLUID);
        $html->addComponent($page);
        echo $html->draw();
        break;
}
