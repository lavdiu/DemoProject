<?php


use Laf\UI\Component\Dropdown;
use Laf\UI\Component\Link;
use Laf\UI\Container\ContainerType;
use Laf\UI\Form\DrawMode;
use Laf\UI\Form\Form;
use Laf\UI\Page\AdminPage;
use Laf\Util\UrlParser;
use Laf\UI\Container\HtmlContainer;
use Laf\UI\Grid\PhpGrid\PhpGrid;
use Laf\UI\Grid\PhpGrid\Column;
use Laf\UI\Grid\PhpGrid\ActionButton;
use Lavdiu\DemoApp\Factory;
use Lavdiu\DemoApp\RoutingTable;


$id = UrlParser::getId();
$routingtable = new RoutingTable($id);

$form = $routingtable->getForm();
$html = Factory::GeneralPage();
$page = new AdminPage();

$page->setTitle("<a href='" . UrlParser::getListLink() . "'>Routing Table </a>");
$page->setTitleIcon('far fa-list-alt');


if ($form->isSubmitted()) {
	$id = $form->processForm();
	UrlParser::redirectToViewPage($id);
	exit;
}

switch (UrlParser::getAction()) {
	case 'update':

		$form->setDrawMode(DrawMode::UPDATE);
		$page->addComponent($form);

		$page->addLink(new Link('Cancel', UrlParser::getViewLink(), 'fas fa-window-close', [], ['btn', 'btn-sm', 'btn-outline-success']));
		$html->addComponent($page);
		echo $html->draw();
		break;
	case 'new':
		$form->setDrawMode(DrawMode::INSERT);
		$page->addComponent($form);
		$page->addLink(new Link('Cancel', UrlParser::getListLink(), 'fas fa-window-close', [], ['btn', 'btn-sm', 'btn-outline-success']));
		$html->addComponent($page);
		echo $html->draw();
		break;
	case 'delete':
		if ($routingtable->recordExists()) {
			if ($routingtable->canSoftDelete()) {
				$routingtable->softDelete();
			} else {
				$routingtable->hardDelete();
			}
		}
		UrlParser::redirectToListPage();
		break;
	case 'view':
		$form->setDrawMode(DrawMode::VIEW);
		$page->addComponent($form);
		$page->addLink(new Link('List', UrlParser::getListLink(), 'far fa-list-alt', [], ['btn', 'btn-sm', 'btn-outline-success']));

		$dd = new Dropdown('Options', '', 'fa fa-cogs', true);
		$dd->addCssClass('btn-outline-success')
			->addCssClass('btn-sm');
		$newLink = new Link('Update', UrlParser::getUpdateLink(), 'fa fa-edit', ['class' => 'btn btn-sm btn-outline-warning']);
		$deleteLink = new Link('Delete', UrlParser::getDeleteLink(), 'fa fa-trash', ['class' => 'btn btn-sm btn-outline-danger']);
		$deleteLink->setConfirmationMessage('Are you sure you want to delete this?');

		$dd->addLink($newLink)
			->addLink($deleteLink);
		$page->addLink($dd);
		$html->addComponent($page);
		echo $html->draw();
		break;
	case 'list':
	default:
		$grid = new PhpGrid('routing_table_list');
        $grid->setTitle('Routing Table List')
            ->setRowsPerPage(20)
            ->setSqlQuery('
SELECT * FROM (
	SELECT
		  `routing_table`.`id` AS routing_table_id
		, `routing_table`.`parent_id` AS routing_table_parent_id
		, `routing_table_parent_id`.`label` AS routing_table_parent_id_label
		, `routing_table`.`unique_name` AS routing_table_unique_name
		, `routing_table`.`label` AS routing_table_label
		, `routing_table`.`icon` AS routing_table_icon
		, `routing_table`.`page_file` AS routing_table_page_file
		, `routing_table`.`is_default` AS routing_table_is_default
		, `routing_table`.`is_visible` AS routing_table_is_visible
		, `yes_or_no`.`label` AS yes_or_no_label
		, `routing_table`.`ordinal` AS routing_table_ordinal
		, `routing_table`.`is_standalone` AS routing_table_is_standalone
		, `routing_table`.`requires_login` AS routing_table_requires_login
	FROM routing_table routing_table
	LEFT JOIN `routing_table` `routing_table_parent_id` ON `routing_table`.`parent_id` = `routing_table_parent_id`.`id`
	LEFT JOIN `yes_or_no` `yes_or_no` ON `routing_table`.`is_visible` = `yes_or_no`.`id`
)l1 ');

		$grid->addColumn(new Column('routing_table_id', 'Id', true, true, sprintf('?module=%s&action=view&id={routing_table_id}', UrlParser::getModule())));
		$grid->addColumn(new Column('routing_table_parent_id', 'ParentId', false));
		$grid->addColumn(new Column('routing_table_parent_id_label', 'Parent', true));
		$grid->addColumn(new Column('routing_table_unique_name', 'Unique Name', true));
		$grid->addColumn(new Column('routing_table_label', 'Label', true));
		$grid->addColumn(new Column('routing_table_icon', 'Icon', true));
		$grid->addColumn(new Column('routing_table_page_file', 'Page File', true));
		$grid->addColumn(new Column('routing_table_is_default', 'Is Default', true));
		$grid->addColumn(new Column('routing_table_is_visible', 'Is VisibleId', false));
		$grid->addColumn(new Column('yes_or_no_label', 'Is Visible', true));
		$grid->addColumn(new Column('routing_table_ordinal', 'Ordinal', true));
		$grid->addColumn(new Column('routing_table_is_standalone', 'Is Standalone', true));
		$grid->addColumn(new Column('routing_table_requires_login', 'Requires Login', true));

		$grid->addActionButton(new ActionButton('View', sprintf('?module=%s&action=view&id={routing_table_id}', UrlParser::getModule()), 'fa fa-eye'));
        $grid->addActionButton(new ActionButton('Update', sprintf('?module=%s&action=update&id={routing_table_id}', UrlParser::getModule()), 'fa fa-edit'));
        $deleteLink = new ActionButton('Delete', sprintf('?module=%s&action=delete&id={routing_table_id}', UrlParser::getModule()), 'fa fa-trash');
        $deleteLink->addAttribute('onclick', "return confirm('Are you sure you want to delete this?')");
        $grid->addActionButton($deleteLink);

        if ($grid->isReadyToHandleRequests()) {
            $grid->bootstrap();
        }
        
        $page->addComponent(new HtmlContainer($grid->draw()));

        $page->addLink(new Link('Add new', UrlParser::getNewLink(), 'fa fa-plus-square', [], ['class' => 'btn btn-sm btn-outline-success']));
		$page->setContainerType(ContainerType::TYPE_FLUID);
		$html->addComponent($page);
		echo $html->draw();
		break;
}
